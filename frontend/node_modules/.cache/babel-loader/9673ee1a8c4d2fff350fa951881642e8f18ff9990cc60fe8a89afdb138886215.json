{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreel\\\\supplychain-dapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport ABI from \"./ValueCentricABI.json\"; // paste ABI from Remix\n\n// Contract address from Remix deployment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x0080D6a84d350E2b9d70157672dC634Ba138091A\";\n\n// Pinata API Keys\nconst PINATA_API_KEY = \"f7415f07fdfc68176fab\";\nconst PINATA_SECRET_KEY = \"3712b48777ed913d1183a81624f75b0ab2cac82fa48f575c4b29c4d5d88782e7\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [productId, setProductId] = useState(\"\");\n  const [serial, setSerial] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [docs, setDocs] = useState([]);\n\n  // ---------------- Connect MetaMask ----------------\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      const contractInstance = new ethers.Contract(CONTRACT_ADDRESS, ABI, signer);\n      setContract(contractInstance);\n    } else {\n      alert(\"❌ MetaMask not detected! Please install it.\");\n    }\n  };\n\n  // ---------------- Register Product ----------------\n  const registerProduct = async () => {\n    if (!contract) return;\n    try {\n      const tx = await contract.registerProduct(productId, serial);\n      await tx.wait();\n      alert(\"✅ Product registered successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"⚠️ Failed to register product. Check role/permissions.\");\n    }\n  };\n\n  // ---------------- Transfer Product ----------------\n  const transferProduct = async () => {\n    if (!contract) return;\n    try {\n      const tx = await contract.transferProduct(productId, serial, receiver);\n      await tx.wait();\n      alert(\"✅ Product transferred successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"⚠️ Failed to transfer product. Check role/permissions.\");\n    }\n  };\n\n  // ---------------- Upload Certificate (Pinata) ----------------\n  const recordDocument = async file => {\n    if (!contract || !file) return;\n    try {\n      // 1. Prepare form data\n      const data = new FormData();\n      data.append(\"file\", file);\n\n      // 2. Upload to Pinata\n      const res = await fetch(\"https://api.pinata.cloud/pinning/pinFileToIPFS\", {\n        method: \"POST\",\n        headers: {\n          pinata_api_key: PINATA_API_KEY,\n          pinata_secret_api_key: PINATA_SECRET_KEY\n        },\n        body: data\n      });\n      const result = await res.json();\n      console.log(\"Uploaded to Pinata:\", result);\n      const cid = result.IpfsHash;\n\n      // 3. Compute productKey from contract\n      const key = await contract.computeProductKey(productId, serial);\n\n      // 4. Hash file name (simple placeholder)\n      const docHash = ethers.keccak256(ethers.toUtf8Bytes(file.name));\n\n      // 5. Store record on blockchain\n      const tx = await contract.recordDocument(key, cid, docHash);\n      await tx.wait();\n      alert(\"✅ Certificate recorded via Pinata!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"⚠️ Failed to upload certificate.\");\n    }\n  };\n\n  // ---------------- Fetch Documents ----------------\n  const fetchDocs = async () => {\n    if (!contract) return;\n    try {\n      const key = await contract.computeProductKey(productId, serial);\n      const result = await contract.getDocs(key);\n      setDocs(result);\n    } catch (err) {\n      console.error(err);\n      alert(\"⚠️ Failed to fetch documents. Check role/permissions.\");\n    }\n  };\n\n  // ---------------- UI ----------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"30px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#2E86C1\"\n      },\n      children: \"ValueCentric Supply Chain DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#555\"\n      },\n      children: \"Blockchain-based traceability with role-based access and certificate verification (Pinata + Ethereum).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      style: {\n        padding: \"10px 20px\",\n        background: \"#2E86C1\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\",\n        marginBottom: \"20px\"\n      },\n      children: \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: [\"\\u2705 Connected as: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Product ID\",\n        value: productId,\n        onChange: e => setProductId(e.target.value),\n        style: {\n          marginRight: \"10px\",\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Serial Number\",\n        value: serial,\n        onChange: e => setSerial(e.target.value),\n        style: {\n          marginRight: \"10px\",\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registerProduct,\n        style: {\n          padding: \"5px 15px\",\n          background: \"#27AE60\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"5px\"\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transfer Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Receiver Address\",\n        value: receiver,\n        onChange: e => setReceiver(e.target.value),\n        style: {\n          marginRight: \"10px\",\n          padding: \"5px\",\n          width: \"400px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: transferProduct,\n        style: {\n          padding: \"5px 15px\",\n          background: \"#F39C12\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"5px\"\n        },\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => recordDocument(e.target.files[0]),\n        style: {\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"View Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchDocs,\n        style: {\n          padding: \"5px 15px\",\n          background: \"#8E44AD\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          marginBottom: \"10px\"\n        },\n        children: \"Fetch Docs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: docs.map((doc, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://gateway.pinata.cloud/ipfs/${doc}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: doc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3DR8d3mFAhjfNMrGzmF+bu2kEpI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","ABI","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","PINATA_API_KEY","PINATA_SECRET_KEY","App","_s","account","setAccount","contract","setContract","productId","setProductId","serial","setSerial","receiver","setReceiver","docs","setDocs","connectWallet","window","ethereum","provider","BrowserProvider","signer","getSigner","accounts","send","contractInstance","Contract","alert","registerProduct","tx","wait","err","console","error","transferProduct","recordDocument","file","data","FormData","append","res","fetch","method","headers","pinata_api_key","pinata_secret_api_key","body","result","json","log","cid","IpfsHash","key","computeProductKey","docHash","keccak256","toUtf8Bytes","name","fetchDocs","getDocs","style","padding","fontFamily","children","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","border","borderRadius","cursor","marginBottom","placeholder","value","onChange","e","target","marginRight","width","type","files","map","doc","idx","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/sreel/supplychain-dapp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport ABI from \"./ValueCentricABI.json\"; // paste ABI from Remix\n\n// Contract address from Remix deployment\nconst CONTRACT_ADDRESS = \"0x0080D6a84d350E2b9d70157672dC634Ba138091A\";\n\n// Pinata API Keys\nconst PINATA_API_KEY = \"f7415f07fdfc68176fab\";\nconst PINATA_SECRET_KEY = \"3712b48777ed913d1183a81624f75b0ab2cac82fa48f575c4b29c4d5d88782e7\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const [productId, setProductId] = useState(\"\");\n  const [serial, setSerial] = useState(\"\");\n  const [receiver, setReceiver] = useState(\"\");\n  const [docs, setDocs] = useState([]);\n\n  // ---------------- Connect MetaMask ----------------\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n\n      const contractInstance = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        ABI,\n        signer\n      );\n      setContract(contractInstance);\n    } else {\n      alert(\"❌ MetaMask not detected! Please install it.\");\n    }\n  };\n\n  // ---------------- Register Product ----------------\n  const registerProduct = async () => {\n    if (!contract) return;\n    try {\n      const tx = await contract.registerProduct(productId, serial);\n      await tx.wait();\n      alert(\"✅ Product registered successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"⚠️ Failed to register product. Check role/permissions.\");\n    }\n  };\n\n  // ---------------- Transfer Product ----------------\n  const transferProduct = async () => {\n    if (!contract) return;\n    try {\n      const tx = await contract.transferProduct(productId, serial, receiver);\n      await tx.wait();\n      alert(\"✅ Product transferred successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"⚠️ Failed to transfer product. Check role/permissions.\");\n    }\n  };\n\n  // ---------------- Upload Certificate (Pinata) ----------------\n  const recordDocument = async (file) => {\n    if (!contract || !file) return;\n\n    try {\n      // 1. Prepare form data\n      const data = new FormData();\n      data.append(\"file\", file);\n\n      // 2. Upload to Pinata\n      const res = await fetch(\"https://api.pinata.cloud/pinning/pinFileToIPFS\", {\n        method: \"POST\",\n        headers: {\n          pinata_api_key: PINATA_API_KEY,\n          pinata_secret_api_key: PINATA_SECRET_KEY,\n        },\n        body: data,\n      });\n\n      const result = await res.json();\n      console.log(\"Uploaded to Pinata:\", result);\n\n      const cid = result.IpfsHash;\n\n      // 3. Compute productKey from contract\n      const key = await contract.computeProductKey(productId, serial);\n\n      // 4. Hash file name (simple placeholder)\n      const docHash = ethers.keccak256(ethers.toUtf8Bytes(file.name));\n\n      // 5. Store record on blockchain\n      const tx = await contract.recordDocument(key, cid, docHash);\n      await tx.wait();\n      alert(\"✅ Certificate recorded via Pinata!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"⚠️ Failed to upload certificate.\");\n    }\n  };\n\n  // ---------------- Fetch Documents ----------------\n  const fetchDocs = async () => {\n    if (!contract) return;\n    try {\n      const key = await contract.computeProductKey(productId, serial);\n      const result = await contract.getDocs(key);\n      setDocs(result);\n    } catch (err) {\n      console.error(err);\n      alert(\"⚠️ Failed to fetch documents. Check role/permissions.\");\n    }\n  };\n\n  // ---------------- UI ----------------\n  return (\n    <div style={{ padding: \"30px\", fontFamily: \"Arial, sans-serif\" }}>\n      <h1 style={{ color: \"#2E86C1\" }}>ValueCentric Supply Chain DApp</h1>\n      <p style={{ color: \"#555\" }}>\n        Blockchain-based traceability with role-based access and certificate\n        verification (Pinata + Ethereum).\n      </p>\n\n      {/* Wallet Connect */}\n      {!account ? (\n        <button\n          onClick={connectWallet}\n          style={{\n            padding: \"10px 20px\",\n            background: \"#2E86C1\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n            marginBottom: \"20px\",\n          }}\n        >\n          Connect MetaMask\n        </button>\n      ) : (\n        <p style={{ color: \"green\" }}>✅ Connected as: {account}</p>\n      )}\n\n      {/* Register Product */}\n      <div style={{ marginBottom: \"20px\" }}>\n        <h2>Register Product</h2>\n        <input\n          placeholder=\"Product ID\"\n          value={productId}\n          onChange={(e) => setProductId(e.target.value)}\n          style={{ marginRight: \"10px\", padding: \"5px\" }}\n        />\n        <input\n          placeholder=\"Serial Number\"\n          value={serial}\n          onChange={(e) => setSerial(e.target.value)}\n          style={{ marginRight: \"10px\", padding: \"5px\" }}\n        />\n        <button\n          onClick={registerProduct}\n          style={{\n            padding: \"5px 15px\",\n            background: \"#27AE60\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"5px\",\n          }}\n        >\n          Register\n        </button>\n      </div>\n\n      {/* Transfer Product */}\n      <div style={{ marginBottom: \"20px\" }}>\n        <h2>Transfer Product</h2>\n        <input\n          placeholder=\"Receiver Address\"\n          value={receiver}\n          onChange={(e) => setReceiver(e.target.value)}\n          style={{ marginRight: \"10px\", padding: \"5px\", width: \"400px\" }}\n        />\n        <button\n          onClick={transferProduct}\n          style={{\n            padding: \"5px 15px\",\n            background: \"#F39C12\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"5px\",\n          }}\n        >\n          Transfer\n        </button>\n      </div>\n\n      {/* Upload Certificate */}\n      <div style={{ marginBottom: \"20px\" }}>\n        <h2>Upload Certificate</h2>\n        <input\n          type=\"file\"\n          onChange={(e) => recordDocument(e.target.files[0])}\n          style={{ marginBottom: \"10px\" }}\n        />\n      </div>\n\n      {/* Fetch Docs */}\n      <div>\n        <h2>View Documents</h2>\n        <button\n          onClick={fetchDocs}\n          style={{\n            padding: \"5px 15px\",\n            background: \"#8E44AD\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Fetch Docs\n        </button>\n        <ul>\n          {docs.map((doc, idx) => (\n            <li key={idx}>\n              <a\n                href={`https://gateway.pinata.cloud/ipfs/${doc}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {doc}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
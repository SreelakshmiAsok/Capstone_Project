{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreel\\\\supplychain-dapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  async function connectWallet() {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(accounts[0]);\n      } catch (err) {\n        console.error(\"Error connecting wallet:\", err);\n      }\n    } else {\n      alert(\"MetaMask not installed!\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supply Chain DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), account ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v+GsaBOyRPoPwJh7mxQ3zpEGSB8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","App","_s","account","setAccount","connectWallet","window","ethereum","provider","BrowserProvider","accounts","request","method","err","console","error","alert","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sreel/supplychain-dapp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n\n  async function connectWallet() {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        setAccount(accounts[0]);\n      } catch (err) {\n        console.error(\"Error connecting wallet:\", err);\n      }\n    } else {\n      alert(\"MetaMask not installed!\");\n    }\n  }\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h2>Supply Chain DApp</h2>\n      {account ? (\n        <p>Connected Account: {account}</p>\n      ) : (\n        <button onClick={connectWallet}>Connect MetaMask</button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5C,eAAeQ,aAAaA,CAAA,EAAG;IAC7B,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF,MAAMC,QAAQ,GAAG,IAAIV,MAAM,CAACW,eAAe,CAACH,MAAM,CAACC,QAAQ,CAAC;QAC5D,MAAMG,QAAQ,GAAG,MAAMJ,MAAM,CAACC,QAAQ,CAACI,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjFR,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAChD;IACF,CAAC,MAAM;MACLG,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF;EAEA,oBACEhB,OAAA;IAAKiB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBrB,OAAO,gBACNH,OAAA;MAAAoB,QAAA,GAAG,qBAAmB,EAACjB,OAAO;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEnCxB,OAAA;MAAQyB,OAAO,EAAEpB,aAAc;MAAAe,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CA3BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}